@model MySocialPet.Models.ViewModel.Salud.CalendarioEventosViewModel

@{
    @using System.Text.Json
    @Html.AntiForgeryToken()
    ViewData["Title"] = "Calendario de " + Model.NombreMascota;
}
<div class="welcome-section container test">
    <div class="container my-5 text-lg-start text-center test">
            <h2 class="fw-bold display-6">@ViewData["Title"]</h2>
    </div>

<div id="calendar"></div>
<div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1100">
    <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto" id="toastTitle">Notificación</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body" id="toastBody">
            </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="modalEvento" tabindex="-1" aria-labelledby="modalEventoLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="CreateEvento" method="post">
                <input type="hidden" name="IdEvento" />
                <div class="modal-header">
                    <h5 class="modal-title" id="modalEventoLabel">Nuevo Evento</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="IdMascota" value="@Model.IdMascota" />
                    <div class="mb-3">
                        <label class="form-label">Título</label>
                        <input type="text" name="Titulo" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Fecha y hora</label>
                        <input type="datetime-local" name="FechaHora" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Tipo de evento</label>
                        <input type="text" name="TipoEvento" class="form-control" placeholder="Vacuna, Cumpleaños, etc." required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Notas</label>
                        <textarea name="Notas" class="form-control"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Guardar</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                </div>
            </form>
        </div>
    </div>
</div>
</div>

@section Scripts {

<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.18/index.global.min.js"></script>
 <script src="@("https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.18/locales/es.global.min.js")"></script>

<script>
    const eventos = @Html.Raw(JsonSerializer.Serialize(Model.Eventos.Select(e => new {
        id = e.IdEvento,
        title = e.Titulo,
        start = e.FechaHora.ToString("yyyy-MM-ddTHH:mm:ss"),
        description = e.Notas,
        extendedProps = new {
            tipoEvento = e.TipoEvento
        }
    })))

    document.addEventListener('DOMContentLoaded', function () {
        const calendarEl = document.getElementById('calendar');

        const calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            locale: 'es',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,listWeek'
            },
            selectable: true,
            dateClick: function (info) {
                const fecha = info.dateStr + "T00:00";
                document.querySelector('#modalEvento input[name="FechaHora"]').value = fecha;
                document.querySelector('#modalEvento input[name="Titulo"]').value = '';
                document.querySelector('#modalEvento input[name="TipoEvento"]').value = '';
                document.querySelector('#modalEvento textarea[name="Notas"]').value = '';
                document.querySelector('#modalEvento form').action = '/Salud/CreateEvento';

                document.getElementById('modalEventoLabel').textContent = "Nuevo Evento";

                const modal = new bootstrap.Modal(document.getElementById('modalEvento'));
                modal.show();
            },
            eventContent: function (arg) {
                const title = arg.event.title;
                const time = arg.timeText;
                const description = arg.event.extendedProps.description;
                const id = arg.event.id;

                const containerEl = document.createElement('div');

                const timeEl = document.createElement('span');
                timeEl.className = 'fw-bold';
                timeEl.textContent = time;

                const deleteBtn = document.createElement('a');
                deleteBtn.href = '#';
                deleteBtn.className = 'btn-delete-event text-danger ms-2 position-absolute end-0 top-0';
                deleteBtn.title = 'Eliminar evento';
                deleteBtn.innerHTML = '&times;';
                deleteBtn.setAttribute('data-id', id);

                // ← Prevenir propagación del clic al contenedor
                deleteBtn.addEventListener('click', function (e) {
                    e.stopPropagation();
                    e.preventDefault();

                    if (confirm("¿Estás seguro de que deseas eliminar este evento?")) {
                        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                        fetch(`/Salud/DeleteEvento/${id}`, {
                            method: 'POST',
                            headers: {
                                'RequestVerificationToken': token
                            }
                        })
                            .then(res => {
                                if (res.ok) {
                                    arg.event.remove();
                                    showToast("Evento eliminado exitosamente");
                                } else {
                                    console.error('Error al eliminar:', res);
                                    alert("Error al eliminar el evento. Revisa la consola para más detalles.");
                                }
                            })
                            .catch(error => {
                                console.error('Error en fetch:', error);
                                alert("Ocurrió un error de red al intentar eliminar el evento.");
                            });
                    }
                });

                const titleEl = document.createElement('div');
                titleEl.className = 'fw-medium';
                titleEl.textContent = title;

                const descEl = document.createElement('div');
                descEl.className = 'text-muted small';
                descEl.textContent = description;

                containerEl.appendChild(timeEl);
                containerEl.appendChild(deleteBtn);
                containerEl.appendChild(titleEl);
                containerEl.appendChild(descEl);

                return { domNodes: [containerEl] };
            },
            eventClick: function (info) {
                const evento = info.event;

                document.querySelector('#modalEvento input[name="FechaHora"]').value = evento.startStr.substring(0, 16);
                document.querySelector('#modalEvento input[name="Titulo"]').value = evento.title;
                document.querySelector('#modalEvento input[name="TipoEvento"]').value = evento.extendedProps.tipoEvento;
                document.querySelector('#modalEvento textarea[name="Notas"]').value = evento.extendedProps.description;
                document.querySelector('#modalEvento input[name="IdEvento"]').value = evento.id;

                document.querySelector('#modalEvento form').action = '/Salud/EditEvento';

                document.getElementById('modalEventoLabel').textContent = "Editar Evento";

                const modal = new bootstrap.Modal(document.getElementById('modalEvento'));
                modal.show();
            },
            events: eventos
        });

        calendar.render();

        function showToast(message, title = "Notificación") {
            document.getElementById('toastTitle').textContent = title;
            document.getElementById('toastBody').textContent = message;

            const toast = new bootstrap.Toast(document.getElementById('liveToast'));
            toast.show();
        }
    });
</script>
}