// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MySocialPet.Migrations
{
    [DbContext(typeof(AppDbContexto))]
    partial class AppDbContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MySocialPet.Models.Albums.Album", b =>
                {
                    b.Property<int>("IdAlbum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlbum"));

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NombreAlbum")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdAlbum");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("MySocialPet.Models.Albums.FotoAlbum", b =>
                {
                    b.Property<int>("IdFoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFoto"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Foto")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("IdAlbum")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdFoto");

                    b.HasIndex("IdAlbum");

                    b.ToTable("FotoAlbum");
                });

            modelBuilder.Entity("MySocialPet.Models.Albums.FotoEtiquetaMascota", b =>
                {
                    b.Property<int>("IdFoto")
                        .HasColumnType("int");

                    b.Property<int>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int>("FotoAlbumIdFoto")
                        .HasColumnType("int");

                    b.Property<int>("MascotaIdMascota")
                        .HasColumnType("int");

                    b.HasKey("IdFoto", "IdMascota");

                    b.HasIndex("FotoAlbumIdFoto");

                    b.HasIndex("MascotaIdMascota");

                    b.ToTable("FotoEtiquetaMascota");
                });

            modelBuilder.Entity("MySocialPet.Models.Autenticacion.TipoUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoUsuario"));

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTipoUsuario");

                    b.ToTable("TipoUsuario");
                });

            modelBuilder.Entity("MySocialPet.Models.Autenticacion.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<byte[]>("AvatarFoto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("MySocialPet.Models.Foros.Discusion", b =>
                {
                    b.Property<int>("IdDiscusion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiscusion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaFinalizado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdForo")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioCreador")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdDiscusion");

                    b.HasIndex("IdForo");

                    b.HasIndex("IdUsuarioCreador");

                    b.ToTable("Discusion");
                });

            modelBuilder.Entity("MySocialPet.Models.Foros.Foro", b =>
                {
                    b.Property<int>("IdForo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdForo"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdEspecie")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdForo");

                    b.HasIndex("IdEspecie");

                    b.ToTable("Foro");
                });

            modelBuilder.Entity("MySocialPet.Models.Foros.Mensaje", b =>
                {
                    b.Property<int>("IdMensaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMensaje"));

                    b.Property<string>("ContenidoMensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDiscusion")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdMensaje");

                    b.HasIndex("IdDiscusion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Mensaje");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<int>("IdEspecie")
                        .HasColumnType("int");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IdCategoria");

                    b.HasIndex("IdEspecie");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Especie", b =>
                {
                    b.Property<int>("IdEspecie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEspecie"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdEspecie");

                    b.ToTable("Especie");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Mascota", b =>
                {
                    b.Property<int>("IdMascota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMascota"));

                    b.Property<int?>("BCS")
                        .HasColumnType("int");

                    b.Property<string>("EstadoAdopcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Esterilizada")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("IdRaza")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal>("LongitudCm")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime?>("Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PesoKg")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("IdMascota");

                    b.HasIndex("IdRaza");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Mascota");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Nota", b =>
                {
                    b.Property<int>("IdNota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNota"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("IdMascota")
                        .HasColumnType("int");

                    b.HasKey("IdNota");

                    b.HasIndex("IdMascota");

                    b.ToTable("Nota");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Protectora", b =>
                {
                    b.Property<int>("IdProtectora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProtectora"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Web")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdProtectora");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Protectora");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Raza", b =>
                {
                    b.Property<int>("IdRaza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRaza"));

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdEspecie")
                        .HasColumnType("int");

                    b.Property<string>("Informacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreRaza")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RatioIdeal")
                        .HasColumnType("int");

                    b.Property<string>("Tamanyo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRaza");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdEspecie");

                    b.ToTable("Raza");
                });

            modelBuilder.Entity("MySocialPet.Models.Salud.Evento", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvento"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMascota")
                        .HasColumnType("int");

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NotificacionEnviada")
                        .HasColumnType("bit");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdEvento");

                    b.HasIndex("IdMascota");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("MySocialPet.Models.Salud.ListaVacuna", b =>
                {
                    b.Property<int>("IdListaVacuna")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdListaVacuna"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EdadRecomendada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsRefuerzo")
                        .HasColumnType("bit");

                    b.Property<bool>("Esencial")
                        .HasColumnType("bit");

                    b.Property<int>("IdEspecie")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoVacuna")
                        .HasColumnType("int");

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdListaVacuna");

                    b.HasIndex("IdEspecie");

                    b.HasIndex("IdTipoVacuna");

                    b.ToTable("ListaVacuna");
                });

            modelBuilder.Entity("MySocialPet.Models.Salud.SaludRegistro", b =>
                {
                    b.Property<int>("IdSalud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSalud"));

                    b.Property<int?>("BCS")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMascota")
                        .HasColumnType("int");

                    b.Property<decimal>("LongitudCm")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("PesoKg")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("IdSalud");

                    b.HasIndex("IdMascota");

                    b.ToTable("SaludRegistro");
                });

            modelBuilder.Entity("MySocialPet.Models.Salud.TipoVacuna", b =>
                {
                    b.Property<int>("IdTipoVacuna")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoVacuna"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoVacuna");

                    b.ToTable("TipoVacuna");
                });

            modelBuilder.Entity("MySocialPet.Models.Salud.VacunaRegistro", b =>
                {
                    b.Property<int>("IdVacunaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVacunaRegistro"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoVacuna")
                        .HasColumnType("int");

                    b.HasKey("IdVacunaRegistro");

                    b.HasIndex("IdMascota");

                    b.HasIndex("IdTipoVacuna");

                    b.ToTable("VacunaRegistro");
                });

            modelBuilder.Entity("MySocialPet.Models.Sugerencias.CategoriaSugerencia", b =>
                {
                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdSugerencia")
                        .HasColumnType("int");

                    b.HasKey("IdCategoria", "IdSugerencia");

                    b.HasIndex("IdSugerencia");

                    b.ToTable("CategoriaSugerencias");
                });

            modelBuilder.Entity("MySocialPet.Models.Sugerencias.EspecieSugerencia", b =>
                {
                    b.Property<int>("IdEspecie")
                        .HasColumnType("int");

                    b.Property<int>("IdSugerencia")
                        .HasColumnType("int");

                    b.HasKey("IdEspecie", "IdSugerencia");

                    b.HasIndex("IdSugerencia");

                    b.ToTable("EspecieSugerencia");
                });

            modelBuilder.Entity("MySocialPet.Models.Sugerencias.RazaSugerencia", b =>
                {
                    b.Property<int>("IdRaza")
                        .HasColumnType("int");

                    b.Property<int>("IdSugerencia")
                        .HasColumnType("int");

                    b.HasKey("IdRaza", "IdSugerencia");

                    b.HasIndex("IdSugerencia");

                    b.ToTable("RazaSugerencia");
                });

            modelBuilder.Entity("MySocialPet.Models.Sugerencias.Sugerencia", b =>
                {
                    b.Property<int>("IdSugerencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSugerencia"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdSugerencia");

                    b.ToTable("Sugerencia");
                });

            modelBuilder.Entity("MySocialPet.Models.Albums.Album", b =>
                {
                    b.HasOne("MySocialPet.Models.Autenticacion.Usuario", "Usuario")
                        .WithMany("Albumes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MySocialPet.Models.Albums.FotoAlbum", b =>
                {
                    b.HasOne("MySocialPet.Models.Albums.Album", "Album")
                        .WithMany("Fotos")
                        .HasForeignKey("IdAlbum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("MySocialPet.Models.Albums.FotoEtiquetaMascota", b =>
                {
                    b.HasOne("MySocialPet.Models.Albums.FotoAlbum", "FotoAlbum")
                        .WithMany("MascotasEtiquetadas")
                        .HasForeignKey("FotoAlbumIdFoto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MySocialPet.Models.Mascotas.Mascota", "Mascota")
                        .WithMany("FotosEtiquetadas")
                        .HasForeignKey("MascotaIdMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FotoAlbum");

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("MySocialPet.Models.Autenticacion.Usuario", b =>
                {
                    b.HasOne("MySocialPet.Models.Autenticacion.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("MySocialPet.Models.Foros.Discusion", b =>
                {
                    b.HasOne("MySocialPet.Models.Foros.Foro", "Foro")
                        .WithMany("Discusiones")
                        .HasForeignKey("IdForo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MySocialPet.Models.Autenticacion.Usuario", "UsuarioCreador")
                        .WithMany("DiscusionesCreadas")
                        .HasForeignKey("IdUsuarioCreador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Foro");

                    b.Navigation("UsuarioCreador");
                });

            modelBuilder.Entity("MySocialPet.Models.Foros.Foro", b =>
                {
                    b.HasOne("MySocialPet.Models.Mascotas.Especie", "Especie")
                        .WithMany()
                        .HasForeignKey("IdEspecie");

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("MySocialPet.Models.Foros.Mensaje", b =>
                {
                    b.HasOne("MySocialPet.Models.Foros.Discusion", "Discusion")
                        .WithMany("Mensajes")
                        .HasForeignKey("IdDiscusion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MySocialPet.Models.Autenticacion.Usuario", "Usuario")
                        .WithMany("Mensajes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discusion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Categoria", b =>
                {
                    b.HasOne("MySocialPet.Models.Mascotas.Especie", "Especie")
                        .WithMany("Categorias")
                        .HasForeignKey("IdEspecie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Mascota", b =>
                {
                    b.HasOne("MySocialPet.Models.Mascotas.Raza", "Raza")
                        .WithMany("Mascotas")
                        .HasForeignKey("IdRaza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MySocialPet.Models.Autenticacion.Usuario", "Usuario")
                        .WithMany("Mascotas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Raza");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Nota", b =>
                {
                    b.HasOne("MySocialPet.Models.Mascotas.Mascota", "Mascota")
                        .WithMany("Notas")
                        .HasForeignKey("IdMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Protectora", b =>
                {
                    b.HasOne("MySocialPet.Models.Autenticacion.Usuario", "Usuario")
                        .WithOne("Protectora")
                        .HasForeignKey("MySocialPet.Models.Mascotas.Protectora", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Raza", b =>
                {
                    b.HasOne("MySocialPet.Models.Mascotas.Categoria", "Categoria")
                        .WithMany("Razas")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MySocialPet.Models.Mascotas.Especie", "Especie")
                        .WithMany("Razas")
                        .HasForeignKey("IdEspecie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("MySocialPet.Models.Salud.Evento", b =>
                {
                    b.HasOne("MySocialPet.Models.Mascotas.Mascota", "Mascota")
                        .WithMany("Eventos")
                        .HasForeignKey("IdMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("MySocialPet.Models.Salud.ListaVacuna", b =>
                {
                    b.HasOne("MySocialPet.Models.Mascotas.Especie", "Especie")
                        .WithMany("PlanesVacunacion")
                        .HasForeignKey("IdEspecie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MySocialPet.Models.Salud.TipoVacuna", "TipoVacuna")
                        .WithMany()
                        .HasForeignKey("IdTipoVacuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");

                    b.Navigation("TipoVacuna");
                });

            modelBuilder.Entity("MySocialPet.Models.Salud.SaludRegistro", b =>
                {
                    b.HasOne("MySocialPet.Models.Mascotas.Mascota", "Mascota")
                        .WithMany("SaludRegistros")
                        .HasForeignKey("IdMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("MySocialPet.Models.Salud.VacunaRegistro", b =>
                {
                    b.HasOne("MySocialPet.Models.Mascotas.Mascota", "Mascota")
                        .WithMany("VacunaRegistros")
                        .HasForeignKey("IdMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MySocialPet.Models.Salud.TipoVacuna", "TipoVacuna")
                        .WithMany()
                        .HasForeignKey("IdTipoVacuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("TipoVacuna");
                });

            modelBuilder.Entity("MySocialPet.Models.Sugerencias.CategoriaSugerencia", b =>
                {
                    b.HasOne("MySocialPet.Models.Mascotas.Categoria", "Categoria")
                        .WithMany("CategoriaSugerencias")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MySocialPet.Models.Sugerencias.Sugerencia", "Sugerencia")
                        .WithMany("CategoriaSugerencias")
                        .HasForeignKey("IdSugerencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Sugerencia");
                });

            modelBuilder.Entity("MySocialPet.Models.Sugerencias.EspecieSugerencia", b =>
                {
                    b.HasOne("MySocialPet.Models.Mascotas.Especie", "Especie")
                        .WithMany("EspeciesSugerencia")
                        .HasForeignKey("IdEspecie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MySocialPet.Models.Sugerencias.Sugerencia", "Sugerencia")
                        .WithMany("EspeciesSugerencia")
                        .HasForeignKey("IdSugerencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");

                    b.Navigation("Sugerencia");
                });

            modelBuilder.Entity("MySocialPet.Models.Sugerencias.RazaSugerencia", b =>
                {
                    b.HasOne("MySocialPet.Models.Mascotas.Raza", "Raza")
                        .WithMany("RazasSugerencia")
                        .HasForeignKey("IdRaza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MySocialPet.Models.Sugerencias.Sugerencia", "Sugerencia")
                        .WithMany("RazasSugerencia")
                        .HasForeignKey("IdSugerencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Raza");

                    b.Navigation("Sugerencia");
                });

            modelBuilder.Entity("MySocialPet.Models.Albums.Album", b =>
                {
                    b.Navigation("Fotos");
                });

            modelBuilder.Entity("MySocialPet.Models.Albums.FotoAlbum", b =>
                {
                    b.Navigation("MascotasEtiquetadas");
                });

            modelBuilder.Entity("MySocialPet.Models.Autenticacion.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("MySocialPet.Models.Autenticacion.Usuario", b =>
                {
                    b.Navigation("Albumes");

                    b.Navigation("DiscusionesCreadas");

                    b.Navigation("Mascotas");

                    b.Navigation("Mensajes");

                    b.Navigation("Protectora")
                        .IsRequired();
                });

            modelBuilder.Entity("MySocialPet.Models.Foros.Discusion", b =>
                {
                    b.Navigation("Mensajes");
                });

            modelBuilder.Entity("MySocialPet.Models.Foros.Foro", b =>
                {
                    b.Navigation("Discusiones");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Categoria", b =>
                {
                    b.Navigation("CategoriaSugerencias");

                    b.Navigation("Razas");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Especie", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("EspeciesSugerencia");

                    b.Navigation("PlanesVacunacion");

                    b.Navigation("Razas");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Mascota", b =>
                {
                    b.Navigation("Eventos");

                    b.Navigation("FotosEtiquetadas");

                    b.Navigation("Notas");

                    b.Navigation("SaludRegistros");

                    b.Navigation("VacunaRegistros");
                });

            modelBuilder.Entity("MySocialPet.Models.Mascotas.Raza", b =>
                {
                    b.Navigation("Mascotas");

                    b.Navigation("RazasSugerencia");
                });

            modelBuilder.Entity("MySocialPet.Models.Sugerencias.Sugerencia", b =>
                {
                    b.Navigation("CategoriaSugerencias");

                    b.Navigation("EspeciesSugerencia");

                    b.Navigation("RazasSugerencia");
                });
#pragma warning restore 612, 618
        }
    }
}
